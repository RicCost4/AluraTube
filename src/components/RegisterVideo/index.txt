//codigo com os incremento para o banco de dados.
import React from "react";
import { StyledRegisterVideo } from "./styles";//importação do css do componente
import { createClient } from '@supabase/supabase-js';

function useForm(){//formulario criado so para extrair a logica e manipular os dados front-end do form
    const [values, setValues] = React.useState({titulos: "", url: ""})
    {/* const [values, setValues] = React.useState(propsDoForm.initialValues) - se você quizer inicial o forma com dados */}

    return{
        values,
        handleChange: (evento) => {
            const value = evento.target.value
            const name = evento.target.name
            setValues({
                ...values,
                [name]: value,
            })
        },
        clearForms(){
            setValues({})
        }
    }
}

// Crie um único cliente supabase para interagir com seu banco de dados e no proprio supabase eles sugerem as variaveis.
const supabaseUrl = "sua requisição"
const supabaseKey = "sua chave"
const supabase = createClient(supabaseUrl, supabaseKey)

// codigo para gera a thumb da url do youtube.
function getThumbnail(url) {
    return `https://img.youtube.com/vi/${url.split("v=")[1]}/hqdefault.jpg`;
}

export default function RegisterVideo(){
    const formCadastro = useForm()
    {/* const formCadastro = useForm({initiaçValues: {titulos: "Richard", url: "https://www.youtube.com"}}) - se você quizer inicial o forma com dados */}
    const [formVisivel, setFormVisivel] = React.useState(false)

    /* Anotação .....
    ## O que precisamos para o form funcionar?
    - pegar os dados, que precisam vir do state
        - titulo
        - url do vídeo 
    - precisamos ter um onSubmit do nosso form
    - Limpar o formulário após o Submit
    */

    return (
        <StyledRegisterVideo>
            <button className="add-video" onClick={()=>setFormVisivel(true)}>
                +
            </button>
            {/* Ternário ou Operadores de Curto-circuito */}
            {formVisivel ? (
                <form onSubmit={(evento) => {
                    evento.preventDefault();{/*comando para não alterar o estado da pagina*/}
                    //Contrato entre nosso front e o back.
                    supabase.from("video").insert({
                        title: formCadastro.values.titulos,
                        url: formCadastro.values.url,
                        thumb: getThumbnail(formCadastro.values.url),
                        playlist: "Favoritos"
                    }).then((oqueveio) => { //.then e o .catch e a mesma coisa do try/catch 
                        console.log(oqueveio)
                    }).catch((erro) => {
                        console.log(erro)
                    })
                    setFormVisivel(false)
                    formCadastro.clearForms()
                }}>
                    <div>
                        <button type="button" className="close-modal" onClick={()=>setFormVisivel(false)}>
                            X
                        </button>
                        <input 
                            placeholder="Titulo do Video" 
                            name="titulos" 
                            value={formCadastro.values.titulos} 
                            onChange={formCadastro.handleChange} />
                        <input 
                            placeholder="URL" 
                            name="url" 
                            value={formCadastro.values.url} 
                            onChange={formCadastro.handleChange} />
                        <button type="submit">
                            Cadastrar
                        </button>
                    </div>
                </form>
            ): false}
        </StyledRegisterVideo>
    )
}